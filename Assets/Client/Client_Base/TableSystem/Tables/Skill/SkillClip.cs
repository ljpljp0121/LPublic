
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg.Skill
{
public sealed partial class SkillClip : Luban.BeanBase
{
    public SkillClip(JSONNode _buf) 
    {
        { if(!_buf["SkillID"].IsNumber) { throw new SerializationException(); }  SkillID = _buf["SkillID"]; }
        { if(!_buf["SkillName"].IsString) { throw new SerializationException(); }  SkillName = _buf["SkillName"]; }
        { if(!_buf["FrameCount"].IsNumber) { throw new SerializationException(); }  FrameCount = _buf["FrameCount"]; }
        { if(!_buf["FrameRate"].IsNumber) { throw new SerializationException(); }  FrameRate = _buf["FrameRate"]; }
        { var __json0 = _buf["CustomEvent"]; if(!__json0.IsArray) { throw new SerializationException(); } CustomEvent = new System.Collections.Generic.Dictionary<int, Skill.SkillCustomEvent>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int _k0;  { if(!__e0[0].IsNumber) { throw new SerializationException(); }  _k0 = __e0[0]; } Skill.SkillCustomEvent _v0;  { if(!__e0[1].IsObject) { throw new SerializationException(); }  _v0 = Skill.SkillCustomEvent.DeserializeSkillCustomEvent(__e0[1]);  }  CustomEvent.Add(_k0, _v0); }   }
        { var __json0 = _buf["AnimationEvent"]; if(!__json0.IsArray) { throw new SerializationException(); } AnimationEvent = new System.Collections.Generic.Dictionary<int, Skill.SkillAnimationEvent>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int _k0;  { if(!__e0[0].IsNumber) { throw new SerializationException(); }  _k0 = __e0[0]; } Skill.SkillAnimationEvent _v0;  { if(!__e0[1].IsObject) { throw new SerializationException(); }  _v0 = Skill.SkillAnimationEvent.DeserializeSkillAnimationEvent(__e0[1]);  }  AnimationEvent.Add(_k0, _v0); }   }
        { var __json0 = _buf["AudioEvent"]; if(!__json0.IsArray) { throw new SerializationException(); } AudioEvent = new System.Collections.Generic.List<Skill.SkillAudioEvent>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { Skill.SkillAudioEvent __v0;  { if(!__e0.IsObject) { throw new SerializationException(); }  __v0 = Skill.SkillAudioEvent.DeserializeSkillAudioEvent(__e0);  }  AudioEvent.Add(__v0); }   }
        { var __json0 = _buf["EffectEvent"]; if(!__json0.IsArray) { throw new SerializationException(); } EffectEvent = new System.Collections.Generic.List<Skill.SkillEffectEvent>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { Skill.SkillEffectEvent __v0;  { if(!__e0.IsObject) { throw new SerializationException(); }  __v0 = Skill.SkillEffectEvent.DeserializeSkillEffectEvent(__e0);  }  EffectEvent.Add(__v0); }   }
        { var __json0 = _buf["ColliderEvent"]; if(!__json0.IsArray) { throw new SerializationException(); } ColliderEvent = new System.Collections.Generic.List<Skill.SkillColliderEvent>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { Skill.SkillColliderEvent __v0;  { if(!__e0.IsObject) { throw new SerializationException(); }  __v0 = Skill.SkillColliderEvent.DeserializeSkillColliderEvent(__e0);  }  ColliderEvent.Add(__v0); }   }
    }

    public static SkillClip DeserializeSkillClip(JSONNode _buf)
    {
        return new Skill.SkillClip(_buf);
    }

    public readonly int SkillID;
    public readonly string SkillName;
    public readonly int FrameCount;
    public readonly int FrameRate;
    public readonly System.Collections.Generic.Dictionary<int, Skill.SkillCustomEvent> CustomEvent;
    public readonly System.Collections.Generic.Dictionary<int, Skill.SkillAnimationEvent> AnimationEvent;
    public readonly System.Collections.Generic.List<Skill.SkillAudioEvent> AudioEvent;
    public readonly System.Collections.Generic.List<Skill.SkillEffectEvent> EffectEvent;
    public readonly System.Collections.Generic.List<Skill.SkillColliderEvent> ColliderEvent;
   
    public const int __ID__ = 1078810020;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        foreach (var _e in CustomEvent.Values) { _e?.ResolveRef(tables); }
        foreach (var _e in AnimationEvent.Values) { _e?.ResolveRef(tables); }
        foreach (var _e in AudioEvent) { _e?.ResolveRef(tables); }
        foreach (var _e in EffectEvent) { _e?.ResolveRef(tables); }
        foreach (var _e in ColliderEvent) { _e?.ResolveRef(tables); }
    }

    public override string ToString()
    {
        return "{ "
        + "SkillID:" + SkillID + ","
        + "SkillName:" + SkillName + ","
        + "FrameCount:" + FrameCount + ","
        + "FrameRate:" + FrameRate + ","
        + "CustomEvent:" + Luban.StringUtil.CollectionToString(CustomEvent) + ","
        + "AnimationEvent:" + Luban.StringUtil.CollectionToString(AnimationEvent) + ","
        + "AudioEvent:" + Luban.StringUtil.CollectionToString(AudioEvent) + ","
        + "EffectEvent:" + Luban.StringUtil.CollectionToString(EffectEvent) + ","
        + "ColliderEvent:" + Luban.StringUtil.CollectionToString(ColliderEvent) + ","
        + "}";
    }
}

}

