
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg.Skill
{
public sealed partial class FanSkillCollider : ShapeCollider
{
    public FanSkillCollider(JSONNode _buf)  : base(_buf) 
    {
        { if(!_buf["Rotation"].IsObject) { throw new SerializationException(); }  Rotation = vector3.Deserializevector3(_buf["Rotation"]);  }
        { if(!_buf["InsideRadius"].IsNumber) { throw new SerializationException(); }  InsideRadius = _buf["InsideRadius"]; }
        { if(!_buf["OutsideRadius"].IsNumber) { throw new SerializationException(); }  OutsideRadius = _buf["OutsideRadius"]; }
        { if(!_buf["Angle"].IsNumber) { throw new SerializationException(); }  Angle = _buf["Angle"]; }
        { if(!_buf["Height"].IsNumber) { throw new SerializationException(); }  Height = _buf["Height"]; }
    }

    public static FanSkillCollider DeserializeFanSkillCollider(JSONNode _buf)
    {
        return new Skill.FanSkillCollider(_buf);
    }

    public readonly vector3 Rotation;
    public readonly float InsideRadius;
    public readonly float OutsideRadius;
    public readonly float Angle;
    public readonly float Height;
   
    public const int __ID__ = -242993329;
    public override int GetTypeId() => __ID__;

    public override void ResolveRef(Tables tables)
    {
        base.ResolveRef(tables);
    }

    public override string ToString()
    {
        return "{ "
        + "Position:" + Position + ","
        + "Rotation:" + Rotation + ","
        + "InsideRadius:" + InsideRadius + ","
        + "OutsideRadius:" + OutsideRadius + ","
        + "Angle:" + Angle + ","
        + "Height:" + Height + ","
        + "}";
    }
}

}

